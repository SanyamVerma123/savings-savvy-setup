
# Workflow for deploying static content to GitHub Pages and building mobile apps
name: Deploy static content and build APK

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Deploy job for GitHub Pages
  deploy-web:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Build Project
        run: npm run build
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the dist folder instead of entire repository
          path: './dist'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Build APK for Android
  build-android:
    runs-on: ubuntu-latest
    needs: deploy-web
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Install Capacitor
        run: |
          npm install @capacitor/core
          npm install @capacitor/cli
          npm install @capacitor/android
      
      - name: Initialize Capacitor
        run: |
          npx cap init savings-savvy-app app.lovable.savingssavvy --web-dir=dist
      
      - name: Build Web
        run: npm run build
      
      - name: Add Android Platform
        run: npx cap add android
      
      - name: Update Capacitor Config
        run: |
          echo '{
            "appId": "app.lovable.savingssavvy",
            "appName": "Savings Savvy",
            "webDir": "dist",
            "bundledWebRuntime": false,
            "server": {
              "androidScheme": "https"
            }
          }' > capacitor.config.json
      
      - name: Sync Capacitor
        run: npx cap sync android
      
      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleDebug
      
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: savings-savvy-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
